<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation=
               "http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
                http://www.springframework.org/schema/tx
                http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
                http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context-4.2.xsd
                http://mybatis.org/schema/mybatis-spring
                http://mybatis.org/schema/mybatis-spring.xsd">

    <!--&lt;!&ndash; 自动扫描 &ndash;&gt;-->
    <!--<context:component-scan base-package="ssm"/>-->
    <!--&lt;!&ndash;&lt;!&ndash; 通过注解方式，将mapper对象映射为sql语句，如有多个包则以逗号隔开&ndash;&gt;&ndash;&gt;-->
    <mybatis:scan base-package="org.shGasUsage.dao.mysql"/>

    <!--使用property-placeholder处理器加载数据源属性文件，如有多个url则以逗号隔开-->
    <!--<context:property-placeholder  location="classpath:db.properties"/>-->

    <!-- 配置dbcp数据源-->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <!-- 数据库驱动名-->
        <property name="driverClassName" value="${dataSource.driver}"/>
        <!-- 数据库url-->
        <property name="url" value="${dataSource.url}"/>
        <!-- 数据库用户名-->
        <property name="username" value="${dataSource.username}"/>
        <!-- 数据库密码-->
        <property name="password" value="${dataSource.password}"/>
        <!-- 数据库最大连接数，Spring推荐使用dbcp,而hibernate推荐使用c3p0-->
        <property name="maxActive" value="${dataSource.maxActive}"/>
        <!-- 最大空闲连接数-->
        <property name="maxIdle" value="${dataSource.maxIdleTime}"/>
    </bean>
    <!-- 配置sqlSessionFactory对象-->
    <bean id = "sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
         <!--配置MyBatis 全局配置文件:mybatis-config.xml-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
         <!--&lt;!&ndash;扫描entity包 使用别名&ndash;&gt;-->
        <property name="typeAliasesPackage" value="org.shGasUsage.entity"/>
         <!--扫描sql配置文件:mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

     <!--配置扫描mapper接口包,动态实现mapper接口,注入到spring容器中-->
    <!--<bean class="org.mybatis.spring.dao.MapperScannerConfigurer">-->
        <!--&lt;!&ndash; 注入sqlSessionFactory &ndash;&gt;-->
        <!--<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>-->
        <!--&lt;!&ndash; 给出需要扫描的mapper接口包&ndash;&gt;-->
        <!--<property name="basePackage" value="ssm.dao-->
    <!--</bean>-->

    <!-- 配置SqlSessionTemplate -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>

    <!-- JDBC事务管理器-->
    <!--setter注入datasource,指定setDataSource()方法注入 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"
          p:dataSource-ref="dataSource" />
    <!-- 启用事务支持annotation注解方式事务管理-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>
